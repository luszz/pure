(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{316:function(v,_,e){"use strict";e.r(_);var t=e(14),o=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"设计目的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#设计目的"}},[v._v("#")]),v._v(" ⭐️ 设计目的")]),v._v(" "),_("p",[v._v("随着前端技术的发展，前端项目正在变得越来越复杂。"),_("code",[v._v("JavaScript")]),v._v(" 作为一门弱类型解释性编程语言，其灵活多变的语法极大的提高了前端开发效率，但同时也存在一系列问题。在大型项目开发过程中，代码维护所占的时间比重往往大于新功能的开发。因此编写符合团队编码规范的代码是至关重要的。 一致性的代码规范可以增强团队开发协作效率、提高代码质量、减少遗留系统维护的负担。但是每个人的代码编写喜好不同，代码风格也会迥然不同，若要一个团队内所有的成员都能发挥最大程度的价值，一个具有普适性的标准是必不可少的。")]),v._v(" "),_("p",[v._v("那么，如何制定前端团队的代码规范，如何在团队内进行最小成本的推广，就是一个合格的前端架构师面临的一大难题。很多团队的基础建设都只是简单地知晓其中一部分规范工具的使用，但却没有一套完整的工程化产出来助力研发同学实现规范落地。因此，如果我们能够产出一套完整化的前端编码规范工具，都会对不仅能够解决存量项目的编码异味，还能够保证后续所有项目的编码质量。")]),v._v(" "),_("br"),v._v(" "),_("h2",{attrs:{id:"为什要学习前端工程化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什要学习前端工程化"}},[v._v("#")]),v._v(" 💡 为什要学习前端工程化")]),v._v(" "),_("p",[v._v("通过本套课程，您可以学会：")]),v._v(" "),_("ol",[_("li",[v._v("学习如何通过 "),_("code",[v._v("monorepo")]),v._v(" 和 "),_("code",[v._v("pnpm")]),v._v(" 的多包管理方式开发一套多 "),_("code",[v._v("npm")]),v._v(" 包的管理方式，以及如何将发包流程植入 "),_("code",[v._v("CI")]),v._v(" 实现自动化发布，以及"),_("code",[v._v("CHANGLOG")]),v._v("的自动化更新部署；")]),v._v(" "),_("li",[v._v("学习现有前端前沿的研发流程下，我们可以通过哪些工具提升项目的编码规范，并提供配套工具的最佳实践，包括但不限于"),_("code",[v._v("eslint")]),v._v("、"),_("code",[v._v("stylelint")]),v._v("、"),_("code",[v._v("commitlint")]),v._v("、"),_("code",[v._v("markdownlint")]),v._v("、"),_("code",[v._v("husky")]),v._v("等，以及如何将单元测试植入配套工具的具体实现；")]),v._v(" "),_("li",[v._v("学习如何通过脚手架的方式，以交互式形式一键接入，实现对"),_("code",[v._v("JavaScript")]),v._v("、"),_("code",[v._v("Typescript")]),v._v("、"),_("code",[v._v("React")]),v._v("、"),_("code",[v._v("Vue")]),v._v("等不同类型的前端项目下的标准的语法限制；")]),v._v(" "),_("li",[v._v("学习如何对存量项目进行优化：对于存量代码不符合规范的问题，支持一键扫描和一键修复，一键式的修复存量问题，最小化存量代码的更新成本；")]),v._v(" "),_("li",[v._v("学习如何对新项目添加规范：支持一键接入新增项目，通过结合"),_("code",[v._v("gitpre-commit")]),v._v("钩子，对提交文件进行编码规范的扫描；同时通过"),_("code",[v._v("husky")]),v._v("的"),_("code",[v._v("commit-msg")]),v._v("钩子，对本次代码提交"),_("code",[v._v("message")]),v._v("的格式进行扫描。")])]),v._v(" "),_("br")])}),[],!1,null,null,null);_.default=o.exports}}]);